/*
 * This file is generated by jOOQ.
*/
package de.jottyfan.camporganizer.db.jooq.tables;


import de.jottyfan.camporganizer.db.jooq.Camp;
import de.jottyfan.camporganizer.db.jooq.Keys;
import de.jottyfan.camporganizer.db.jooq.enums.EnumCamprole;
import de.jottyfan.camporganizer.db.jooq.tables.records.TPersonRecord;

import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TPerson extends TableImpl<TPersonRecord> {

    private static final long serialVersionUID = -1693840082;

    /**
     * The reference instance of <code>camp.t_person</code>
     */
    public static final TPerson T_PERSON = new TPerson();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TPersonRecord> getRecordType() {
        return TPersonRecord.class;
    }

    /**
     * The column <code>camp.t_person.pk</code>.
     */
    public final TableField<TPersonRecord, Integer> PK = createField("pk", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('camp.t_person_pk_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>camp.t_person.forename</code>.
     */
    public final TableField<TPersonRecord, String> FORENAME = createField("forename", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>camp.t_person.surname</code>.
     */
    public final TableField<TPersonRecord, String> SURNAME = createField("surname", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>camp.t_person.street</code>.
     */
    public final TableField<TPersonRecord, String> STREET = createField("street", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>camp.t_person.zip</code>.
     */
    public final TableField<TPersonRecord, String> ZIP = createField("zip", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>camp.t_person.city</code>.
     */
    public final TableField<TPersonRecord, String> CITY = createField("city", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>camp.t_person.phone</code>.
     */
    public final TableField<TPersonRecord, String> PHONE = createField("phone", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>camp.t_person.birthdate</code>.
     */
    public final TableField<TPersonRecord, Date> BIRTHDATE = createField("birthdate", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>camp.t_person.camprole</code>.
     */
    public final TableField<TPersonRecord, EnumCamprole> CAMPROLE = createField("camprole", org.jooq.util.postgres.PostgresDataType.VARCHAR.asEnumDataType(de.jottyfan.camporganizer.db.jooq.enums.EnumCamprole.class), this, "");

    /**
     * The column <code>camp.t_person.email</code>.
     */
    public final TableField<TPersonRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>camp.t_person.fk_camp</code>.
     */
    public final TableField<TPersonRecord, Integer> FK_CAMP = createField("fk_camp", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>camp.t_person</code> table reference
     */
    public TPerson() {
        this("t_person", null);
    }

    /**
     * Create an aliased <code>camp.t_person</code> table reference
     */
    public TPerson(String alias) {
        this(alias, T_PERSON);
    }

    private TPerson(String alias, Table<TPersonRecord> aliased) {
        this(alias, aliased, null);
    }

    private TPerson(String alias, Table<TPersonRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Camp.CAMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TPersonRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_PERSON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TPersonRecord> getPrimaryKey() {
        return Keys.T_PERSON_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TPersonRecord>> getKeys() {
        return Arrays.<UniqueKey<TPersonRecord>>asList(Keys.T_PERSON_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TPersonRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TPersonRecord, ?>>asList(Keys.T_PERSON__T_PERSON_FK_CAMP_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TPerson as(String alias) {
        return new TPerson(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TPerson rename(String name) {
        return new TPerson(name, null);
    }
}
