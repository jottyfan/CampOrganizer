/*
 * This file is generated by jOOQ.
*/
package de.jottyfan.camporganizer.db.jooq.tables;


import de.jottyfan.camporganizer.db.jooq.Camp;
import de.jottyfan.camporganizer.db.jooq.Keys;
import de.jottyfan.camporganizer.db.jooq.tables.records.TSalesRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TSales extends TableImpl<TSalesRecord> {

    private static final long serialVersionUID = -835050880;

    /**
     * The reference instance of <code>camp.t_sales</code>
     */
    public static final TSales T_SALES = new TSales();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TSalesRecord> getRecordType() {
        return TSalesRecord.class;
    }

    /**
     * The column <code>camp.t_sales.pk</code>.
     */
    public final TableField<TSalesRecord, Integer> PK = createField("pk", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('camp.t_sales_pk_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>camp.t_sales.trader</code>.
     */
    public final TableField<TSalesRecord, String> TRADER = createField("trader", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>camp.t_sales.fk_camp</code>.
     */
    public final TableField<TSalesRecord, Integer> FK_CAMP = createField("fk_camp", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>camp.t_sales.provider</code>.
     */
    public final TableField<TSalesRecord, String> PROVIDER = createField("provider", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>camp.t_sales.cash</code>.
     */
    public final TableField<TSalesRecord, BigDecimal> CASH = createField("cash", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>camp.t_sales.buydate</code>.
     */
    public final TableField<TSalesRecord, Timestamp> BUYDATE = createField("buydate", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>camp.t_sales.recipenumber</code>.
     */
    public final TableField<TSalesRecord, String> RECIPENUMBER = createField("recipenumber", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>camp.t_sales.recipeshot</code>.
     */
    public final TableField<TSalesRecord, byte[]> RECIPESHOT = createField("recipeshot", org.jooq.impl.SQLDataType.BLOB, this, "");

    /**
     * The column <code>camp.t_sales.recipenote</code>.
     */
    public final TableField<TSalesRecord, String> RECIPENOTE = createField("recipenote", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>camp.t_sales.incredients</code>.
     */
    public final TableField<TSalesRecord, String> INCREDIENTS = createField("incredients", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>camp.t_sales</code> table reference
     */
    public TSales() {
        this("t_sales", null);
    }

    /**
     * Create an aliased <code>camp.t_sales</code> table reference
     */
    public TSales(String alias) {
        this(alias, T_SALES);
    }

    private TSales(String alias, Table<TSalesRecord> aliased) {
        this(alias, aliased, null);
    }

    private TSales(String alias, Table<TSalesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Camp.CAMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TSalesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_SALES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TSalesRecord> getPrimaryKey() {
        return Keys.T_SALES_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TSalesRecord>> getKeys() {
        return Arrays.<UniqueKey<TSalesRecord>>asList(Keys.T_SALES_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TSalesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TSalesRecord, ?>>asList(Keys.T_SALES__T_SALES_FK_CAMP_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TSales as(String alias) {
        return new TSales(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TSales rename(String name) {
        return new TSales(name, null);
    }
}
