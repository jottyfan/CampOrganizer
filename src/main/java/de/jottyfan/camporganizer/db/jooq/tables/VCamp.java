/*
 * This file is generated by jOOQ.
*/
package de.jottyfan.camporganizer.db.jooq.tables;


import de.jottyfan.camporganizer.db.jooq.Camp;
import de.jottyfan.camporganizer.db.jooq.tables.records.VCampRecord;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VCamp extends TableImpl<VCampRecord> {

    private static final long serialVersionUID = -1830554280;

    /**
     * The reference instance of <code>camp.v_camp</code>
     */
    public static final VCamp V_CAMP = new VCamp();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VCampRecord> getRecordType() {
        return VCampRecord.class;
    }

    /**
     * The column <code>camp.v_camp.pk</code>.
     */
    public final TableField<VCampRecord, Integer> PK = createField("pk", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>camp.v_camp.is_over</code>.
     */
    public final TableField<VCampRecord, Boolean> IS_OVER = createField("is_over", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>camp.v_camp.name</code>.
     */
    public final TableField<VCampRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>camp.v_camp.arrive</code>.
     */
    public final TableField<VCampRecord, Timestamp> ARRIVE = createField("arrive", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>camp.v_camp.depart</code>.
     */
    public final TableField<VCampRecord, Timestamp> DEPART = createField("depart", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>camp.v_camp.year</code>.
     */
    public final TableField<VCampRecord, Double> YEAR = createField("year", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>camp.v_camp.location_name</code>.
     */
    public final TableField<VCampRecord, String> LOCATION_NAME = createField("location_name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>camp.v_camp.min_age</code>.
     */
    public final TableField<VCampRecord, Integer> MIN_AGE = createField("min_age", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>camp.v_camp.max_age</code>.
     */
    public final TableField<VCampRecord, Integer> MAX_AGE = createField("max_age", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>camp.v_camp.url</code>.
     */
    public final TableField<VCampRecord, String> URL = createField("url", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>camp.v_camp.price</code>.
     */
    public final TableField<VCampRecord, String> PRICE = createField("price", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>camp.v_camp.countries</code>.
     */
    public final TableField<VCampRecord, String> COUNTRIES = createField("countries", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>camp.v_camp.fk_document</code>.
     */
    public final TableField<VCampRecord, Integer> FK_DOCUMENT = createField("fk_document", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>camp.v_camp</code> table reference
     */
    public VCamp() {
        this(DSL.name("v_camp"), null);
    }

    /**
     * Create an aliased <code>camp.v_camp</code> table reference
     */
    public VCamp(String alias) {
        this(DSL.name(alias), V_CAMP);
    }

    /**
     * Create an aliased <code>camp.v_camp</code> table reference
     */
    public VCamp(Name alias) {
        this(alias, V_CAMP);
    }

    private VCamp(Name alias, Table<VCampRecord> aliased) {
        this(alias, aliased, null);
    }

    private VCamp(Name alias, Table<VCampRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Camp.CAMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VCamp as(String alias) {
        return new VCamp(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VCamp as(Name alias) {
        return new VCamp(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VCamp rename(String name) {
        return new VCamp(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VCamp rename(Name name) {
        return new VCamp(name, null);
    }
}
