/*
 * This file is generated by jOOQ.
*/
package de.jottyfan.camporganizer.db.jooq.tables;


import de.jottyfan.camporganizer.db.jooq.Camp;
import de.jottyfan.camporganizer.db.jooq.enums.EnumRole;
import de.jottyfan.camporganizer.db.jooq.tables.records.VRoleRecord;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VRole extends TableImpl<VRoleRecord> {

    private static final long serialVersionUID = -1774907396;

    /**
     * The reference instance of <code>camp.v_role</code>
     */
    public static final VRole V_ROLE = new VRole();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VRoleRecord> getRecordType() {
        return VRoleRecord.class;
    }

    /**
     * The column <code>camp.v_role.unnest</code>.
     */
    public final TableField<VRoleRecord, EnumRole> UNNEST = createField("unnest", org.jooq.util.postgres.PostgresDataType.VARCHAR.asEnumDataType(de.jottyfan.camporganizer.db.jooq.enums.EnumRole.class), this, "");

    /**
     * Create a <code>camp.v_role</code> table reference
     */
    public VRole() {
        this(DSL.name("v_role"), null);
    }

    /**
     * Create an aliased <code>camp.v_role</code> table reference
     */
    public VRole(String alias) {
        this(DSL.name(alias), V_ROLE);
    }

    /**
     * Create an aliased <code>camp.v_role</code> table reference
     */
    public VRole(Name alias) {
        this(alias, V_ROLE);
    }

    private VRole(Name alias, Table<VRoleRecord> aliased) {
        this(alias, aliased, null);
    }

    private VRole(Name alias, Table<VRoleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Camp.CAMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VRole as(String alias) {
        return new VRole(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VRole as(Name alias) {
        return new VRole(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VRole rename(String name) {
        return new VRole(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VRole rename(Name name) {
        return new VRole(name, null);
    }
}
