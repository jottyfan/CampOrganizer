/*
 * This file is generated by jOOQ.
*/
package de.jottyfan.camporganizer.db.jooq.tables;


import de.jottyfan.camporganizer.db.jooq.Camp;
import de.jottyfan.camporganizer.db.jooq.enums.EnumCamprole;
import de.jottyfan.camporganizer.db.jooq.tables.records.VRegistrationRecord;

import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VRegistration extends TableImpl<VRegistrationRecord> {

    private static final long serialVersionUID = -593059165;

    /**
     * The reference instance of <code>camp.v_registration</code>
     */
    public static final VRegistration V_REGISTRATION = new VRegistration();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VRegistrationRecord> getRecordType() {
        return VRegistrationRecord.class;
    }

    /**
     * The column <code>camp.v_registration.pk</code>.
     */
    public final TableField<VRegistrationRecord, Integer> PK = createField("pk", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>camp.v_registration.forename</code>.
     */
    public final TableField<VRegistrationRecord, String> FORENAME = createField("forename", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>camp.v_registration.surname</code>.
     */
    public final TableField<VRegistrationRecord, String> SURNAME = createField("surname", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>camp.v_registration.street</code>.
     */
    public final TableField<VRegistrationRecord, String> STREET = createField("street", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>camp.v_registration.zip</code>.
     */
    public final TableField<VRegistrationRecord, String> ZIP = createField("zip", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>camp.v_registration.city</code>.
     */
    public final TableField<VRegistrationRecord, String> CITY = createField("city", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>camp.v_registration.phone</code>.
     */
    public final TableField<VRegistrationRecord, String> PHONE = createField("phone", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>camp.v_registration.birthdate</code>.
     */
    public final TableField<VRegistrationRecord, Date> BIRTHDATE = createField("birthdate", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>camp.v_registration.camprole</code>.
     */
    public final TableField<VRegistrationRecord, EnumCamprole> CAMPROLE = createField("camprole", org.jooq.util.postgres.PostgresDataType.VARCHAR.asEnumDataType(de.jottyfan.camporganizer.db.jooq.enums.EnumCamprole.class), this, "");

    /**
     * The column <code>camp.v_registration.email</code>.
     */
    public final TableField<VRegistrationRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>camp.v_registration.campname</code>.
     */
    public final TableField<VRegistrationRecord, String> CAMPNAME = createField("campname", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>camp.v_registration</code> table reference
     */
    public VRegistration() {
        this(DSL.name("v_registration"), null);
    }

    /**
     * Create an aliased <code>camp.v_registration</code> table reference
     */
    public VRegistration(String alias) {
        this(DSL.name(alias), V_REGISTRATION);
    }

    /**
     * Create an aliased <code>camp.v_registration</code> table reference
     */
    public VRegistration(Name alias) {
        this(alias, V_REGISTRATION);
    }

    private VRegistration(Name alias, Table<VRegistrationRecord> aliased) {
        this(alias, aliased, null);
    }

    private VRegistration(Name alias, Table<VRegistrationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Camp.CAMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VRegistration as(String alias) {
        return new VRegistration(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VRegistration as(Name alias) {
        return new VRegistration(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VRegistration rename(String name) {
        return new VRegistration(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VRegistration rename(Name name) {
        return new VRegistration(name, null);
    }
}
