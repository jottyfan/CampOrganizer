/*
 * This file is generated by jOOQ.
*/
package de.jottyfan.camporganizer.db.jooq.tables.records;


import de.jottyfan.camporganizer.db.jooq.enums.EnumDocument;
import de.jottyfan.camporganizer.db.jooq.enums.EnumFiletype;
import de.jottyfan.camporganizer.db.jooq.tables.TDocument;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TDocumentRecord extends UpdatableRecordImpl<TDocumentRecord> implements Record5<Integer, EnumDocument, String, String, EnumFiletype> {

    private static final long serialVersionUID = -826946742;

    /**
     * Setter for <code>camp.t_document.pk</code>.
     */
    public void setPk(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>camp.t_document.pk</code>.
     */
    public Integer getPk() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>camp.t_document.doctype</code>.
     */
    public void setDoctype(EnumDocument value) {
        set(1, value);
    }

    /**
     * Getter for <code>camp.t_document.doctype</code>.
     */
    public EnumDocument getDoctype() {
        return (EnumDocument) get(1);
    }

    /**
     * Setter for <code>camp.t_document.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>camp.t_document.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>camp.t_document.document</code>.
     */
    public void setDocument(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>camp.t_document.document</code>.
     */
    public String getDocument() {
        return (String) get(3);
    }

    /**
     * Setter for <code>camp.t_document.filetype</code>.
     */
    public void setFiletype(EnumFiletype value) {
        set(4, value);
    }

    /**
     * Getter for <code>camp.t_document.filetype</code>.
     */
    public EnumFiletype getFiletype() {
        return (EnumFiletype) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, EnumDocument, String, String, EnumFiletype> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, EnumDocument, String, String, EnumFiletype> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return TDocument.T_DOCUMENT.PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<EnumDocument> field2() {
        return TDocument.T_DOCUMENT.DOCTYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return TDocument.T_DOCUMENT.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return TDocument.T_DOCUMENT.DOCUMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<EnumFiletype> field5() {
        return TDocument.T_DOCUMENT.FILETYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getPk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EnumDocument component2() {
        return getDoctype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getDocument();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EnumFiletype component5() {
        return getFiletype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getPk();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EnumDocument value2() {
        return getDoctype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getDocument();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EnumFiletype value5() {
        return getFiletype();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TDocumentRecord value1(Integer value) {
        setPk(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TDocumentRecord value2(EnumDocument value) {
        setDoctype(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TDocumentRecord value3(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TDocumentRecord value4(String value) {
        setDocument(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TDocumentRecord value5(EnumFiletype value) {
        setFiletype(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TDocumentRecord values(Integer value1, EnumDocument value2, String value3, String value4, EnumFiletype value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TDocumentRecord
     */
    public TDocumentRecord() {
        super(TDocument.T_DOCUMENT);
    }

    /**
     * Create a detached, initialised TDocumentRecord
     */
    public TDocumentRecord(Integer pk, EnumDocument doctype, String name, String document, EnumFiletype filetype) {
        super(TDocument.T_DOCUMENT);

        set(0, pk);
        set(1, doctype);
        set(2, name);
        set(3, document);
        set(4, filetype);
    }
}
