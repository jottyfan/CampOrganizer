/*
 * This file is generated by jOOQ.
*/
package de.jottyfan.camporganizer.db.jooq.tables;


import de.jottyfan.camporganizer.db.jooq.Camp;
import de.jottyfan.camporganizer.db.jooq.tables.records.VSalesRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VSales extends TableImpl<VSalesRecord> {

    private static final long serialVersionUID = 944447505;

    /**
     * The reference instance of <code>camp.v_sales</code>
     */
    public static final VSales V_SALES = new VSales();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VSalesRecord> getRecordType() {
        return VSalesRecord.class;
    }

    /**
     * The column <code>camp.v_sales.pk</code>.
     */
    public final TableField<VSalesRecord, Integer> PK = createField("pk", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>camp.v_sales.trader</code>.
     */
    public final TableField<VSalesRecord, String> TRADER = createField("trader", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>camp.v_sales.name</code>.
     */
    public final TableField<VSalesRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>camp.v_sales.location</code>.
     */
    public final TableField<VSalesRecord, String> LOCATION = createField("location", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>camp.v_sales.incredients</code>.
     */
    public final TableField<VSalesRecord, String> INCREDIENTS = createField("incredients", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>camp.v_sales.year</code>.
     */
    public final TableField<VSalesRecord, Double> YEAR = createField("year", org.jooq.impl.SQLDataType.DOUBLE, this, "");

    /**
     * The column <code>camp.v_sales.provider</code>.
     */
    public final TableField<VSalesRecord, String> PROVIDER = createField("provider", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>camp.v_sales.cash</code>.
     */
    public final TableField<VSalesRecord, BigDecimal> CASH = createField("cash", org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>camp.v_sales.buydate</code>.
     */
    public final TableField<VSalesRecord, Timestamp> BUYDATE = createField("buydate", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>camp.v_sales.recipenumber</code>.
     */
    public final TableField<VSalesRecord, String> RECIPENUMBER = createField("recipenumber", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>camp.v_sales.recipeshot</code>.
     */
    public final TableField<VSalesRecord, byte[]> RECIPESHOT = createField("recipeshot", org.jooq.impl.SQLDataType.BLOB, this, "");

    /**
     * The column <code>camp.v_sales.recipenote</code>.
     */
    public final TableField<VSalesRecord, String> RECIPENOTE = createField("recipenote", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>camp.v_sales.content</code>.
     */
    public final TableField<VSalesRecord, String[]> CONTENT = createField("content", org.jooq.impl.SQLDataType.CLOB.getArrayDataType(), this, "");

    /**
     * Create a <code>camp.v_sales</code> table reference
     */
    public VSales() {
        this("v_sales", null);
    }

    /**
     * Create an aliased <code>camp.v_sales</code> table reference
     */
    public VSales(String alias) {
        this(alias, V_SALES);
    }

    private VSales(String alias, Table<VSalesRecord> aliased) {
        this(alias, aliased, null);
    }

    private VSales(String alias, Table<VSalesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Camp.CAMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VSales as(String alias) {
        return new VSales(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VSales rename(String name) {
        return new VSales(name, null);
    }
}
